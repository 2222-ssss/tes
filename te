local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Name = "KaanGui"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.4, 0, 0.55, 0)
frame.Position = UDim2.new(0.3, 0, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
frame.BackgroundTransparency = 0.3
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 3
uiStroke.Color = Color3.fromRGB(50, 150, 255)
uiStroke.Parent = frame

local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0.1, 0)
label.Position = UDim2.new(0, 0, 0, 0)
label.BackgroundTransparency = 1
label.Text = "Made By TovKaiz (voxrqz)"
label.TextScaled = true
label.TextColor3 = Color3.fromRGB(128, 128, 128)
label.TextTransparency = 0.2
label.Parent = frame

local tweenService = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)

local goal = {TextColor3 = Color3.fromRGB(255, 255, 255), TextTransparency = 0.1}
local tween = tweenService:Create(label, tweenInfo, goal)
tween:Play()

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0, 98, 0, 27)
textBox.Position = UDim2.new(0.311, 0, 0.313, 0)
textBox.BackgroundColor3 = Color3.fromRGB(168, 168, 168)
textBox.BackgroundTransparency = 0.4
textBox.Text = "Kill"
textBox.TextScaled = true
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.Parent = frame

local killButton = Instance.new("TextButton")
killButton.Size = UDim2.new(0.06, 0, 0.06, 0)
killButton.Position = UDim2.new(0.02, 0, 0.22, 0)
killButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
killButton.BackgroundTransparency = 0.5
killButton.Text = "Kill"
killButton.TextScaled = true
killButton.TextColor3 = Color3.fromRGB(255, 255, 255)
killButton.Parent = gui

local clearButton = Instance.new("TextButton")
clearButton.Size = UDim2.new(0.06, 0, 0.06, 0)
clearButton.Position = UDim2.new(0.02, 0, 0.31, 0)
clearButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
clearButton.BackgroundTransparency = 0.5
clearButton.Text = "Clear"
clearButton.TextScaled = true
clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clearButton.Parent = gui

local toggleKilling = false
local toggleVerticalStacking = false
local toggleInvisibleMode = false
local toggleTrackingPlayer = false

killButton.MouseButton1Click:Connect(function()
    toggleKilling = not toggleKilling
    if toggleKilling then
        game.Players:Chat('.k '..textBox.Text)
    else
        game.Players:Chat('.clr')
    end
end)

clearButton.MouseButton1Click:Connect(function()
    toggleVerticalStacking = not toggleVerticalStacking
    if toggleVerticalStacking then
        game.Players:Chat('.h -9 ' .. player.Name)
        game.Players:Chat('.g ' .. player.Name)
    else
        game.Players:Chat('.h 3 ' .. player.Name)
        game.Players:Chat('.ung ' .. player.Name)
    end
end)

local verticalStackToggle = Instance.new("TextButton")
verticalStackToggle.Size = UDim2.new(0.06, 0, 0.06, 0)
verticalStackToggle.Position = UDim2.new(0.02, 0, 0.4, 0)
verticalStackToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
verticalStackToggle.BackgroundTransparency = 0.5
verticalStackToggle.Text = "Stack"
verticalStackToggle.TextScaled = true
verticalStackToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
verticalStackToggle.Parent = gui

local invisibilityToggle = Instance.new("TextButton")
invisibilityToggle.Size = UDim2.new(0.06, 0, 0.06, 0)
invisibilityToggle.Position = UDim2.new(0.02, 0, 0.49, 0)
invisibilityToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
invisibilityToggle.BackgroundTransparency = 0.5
invisibilityToggle.Text = "Invisible"
invisibilityToggle.TextScaled = true
invisibilityToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
invisibilityToggle.Parent = gui

local trackingToggle = Instance.new("TextButton")
trackingToggle.Size = UDim2.new(0.06, 0, 0.06, 0)
trackingToggle.Position = UDim2.new(0.02, 0, 0.58, 0)
trackingToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
trackingToggle.BackgroundTransparency = 0.5
trackingToggle.Text = "Track"
trackingToggle.TextScaled = true
trackingToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
trackingToggle.Parent = gui

verticalStackToggle.MouseButton1Click:Connect(function()
    toggleVerticalStacking = not toggleVerticalStacking
    if toggleVerticalStacking then
        game.Players:Chat('.g ' .. player.Name)
    else
        game.Players:Chat('.ung ' .. player.Name)
    end
end)

invisibilityToggle.MouseButton1Click:Connect(function()
    toggleInvisibleMode = not toggleInvisibleMode
    if toggleInvisibleMode then
        game.Players:Chat('.v ' .. player.Name)
    else
        game.Players:Chat('.unv ' .. player.Name)
    end
end)

trackingToggle.MouseButton1Click:Connect(function()
    toggleTrackingPlayer = not toggleTrackingPlayer
    if toggleTrackingPlayer then
        game.Players:Chat('.q ' .. player.Name)
    else
        game.Players:Chat('.unq ' .. player.Name)
    end
end)

frame.Visible = false

local targetPlayer = game.Players.LocalPlayer
local character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local torso = character:WaitForChild("UpperTorso")
local anvils = {}
local orbitRadius = 3.4
local orbitSpeed = 2.2
local headOffset = 1.6
local verticalStackHeight = 0
local isInvisibleMode = false
local isTrackingPlayer = false
game.Workspace.FallenPartsDestroyHeight = 0/0
local standardVelocity = -9e37
local commandPrefix = "."
local isKilling = false
local isVerticalStacking = false
local isOrbiting = false

local function addAnvil(anvil)
    table.insert(anvils, anvil)
    anvil.Parent = workspace
    anvil.CanCollide = false
    anvil.Anchored = false
    anvil.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    if not isKilling then
        anvil.Velocity = (anvil.Position - rootPart.Position).unit * standardVelocity
    elseif isKilling then
        if isInvisibleMode then
            anvil.Position = Vector3.new(anvil.Position.X, -100, anvil.Position.Z)
        else
            anvil.Velocity = (anvil.Position - rootPart.Position).unit * standardVelocity
        end
    end
end

local function findAllAnvils()
    anvils = {}
    for _, v in pairs(workspace:GetChildren()) do
        if v:IsA("BasePart") and v.Name == 'Anvil' and v:FindFirstChild('Script') and v.Script:FindFirstChild('Value') and v.Script.Value.Value == targetPlayer then
            addAnvil(v)
        end
    end
end

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= targetPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (rootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end
end
return closestPlayer
end

local function updateOrbit()
while isOrbiting do
    local closestPlayer = getClosestPlayer()
    if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = closestPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, headOffset, 0)
        local direction = (targetPosition - rootPart.Position).unit
        local orbitPosition = rootPart.Position + direction * orbitRadius
        rootPart.CFrame = CFrame.new(orbitPosition)
    end
    wait(1 / orbitSpeed)
end
end

local function handlePlayerAction(action)
if action == "Kill" then
    game.Players:Chat('.k ' .. targetPlayer.Name)
elseif action == "Clear" then
    game.Players:Chat('.clr')
elseif action == "Stack" then
    if isVerticalStacking then
        game.Players:Chat('.h 3 ' .. targetPlayer.Name)
        game.Players:Chat('.ung ' .. targetPlayer.Name)
    else
        game.Players:Chat('.h -9 ' .. targetPlayer.Name)
        game.Players:Chat('.g ' .. targetPlayer.Name)
    end
elseif action == "Invisible" then
    if isInvisibleMode then
        game.Players:Chat('.unv ' .. targetPlayer.Name)
    else
        game.Players:Chat('.v ' .. targetPlayer.Name)
    end
elseif action == "Track" then
    if isTrackingPlayer then
        game.Players:Chat('.unq ' .. targetPlayer.Name)
    else
        game.Players:Chat('.q ' .. targetPlayer.Name)
    end
end
end

killButton.MouseButton1Click:Connect(function()
handlePlayerAction("Kill")
end)

clearButton.MouseButton1Click:Connect(function()
handlePlayerAction("Clear")
end)

verticalStackToggle.MouseButton1Click:Connect(function()
isVerticalStacking = not isVerticalStacking
handlePlayerAction("Stack")
end)

invisibilityToggle.MouseButton1Click:Connect(function()
isInvisibleMode = not isInvisibleMode
handlePlayerAction("Invisible")
end)

trackingToggle.MouseButton1Click:Connect(function()
isTrackingPlayer = not isTrackingPlayer
handlePlayerAction("Track")
end)

while true do
findAllAnvils()
if isOrbiting then
    updateOrbit()
end
wait()
end
